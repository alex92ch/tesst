apiVersion: batch/v1
kind: Job
metadata:
  name: teleport-postsync
  namespace: teleport-cluster
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  template:
    spec:
      serviceAccountName: teleport-bootstrap
      restartPolicy: Never
      volumes:
        - name: config
          emptyDir: {}
        - name: machine-id
          emptyDir: {}
      initContainers:
        - name: config-writer
          image: busybox
          command: ["/bin/sh", "-c"]
          args:
            - |
              cat <<EOF > /config/tbot.yaml
              version: v2
              onboarding:
                join_method: kubernetes
                token: bootstrap
              storage:
                type: memory
              proxy_server: localhost
              outputs:
              - type: identity
                destination:
                  type: directory
                  path: /opt/machine-id
              EOF
          volumeMounts:
            - mountPath: /config
              name: config
      containers:
        - name: tbot
          image: public.ecr.aws/gravitational/tbot-fips-distroless:18.2.0
          args: ["start", "-c", "/config/tbot.yaml"]
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - mountPath: /config
              name: config
            - mountPath: /opt/machine-id
              name: machine-id
        - name: tctl
          image: public.ecr.aws/gravitational/teleport:18.2.0
          command: ["/bin/sh", "-c"]
          args:
            - |
              echo "Waiting for tbot credentials..."
              while [ ! -f /opt/machine-id/identity ]; do
                sleep 2
              done
              echo "Running tctl..."
              tctl --auth-server teleport-cluster.teleport-cluster.svc.cluster.local:443 -i /opt/machine-id/identity create -f roles/*.yaml
          volumeMounts:
            - mountPath: /opt/machine-id
              name: machine-id